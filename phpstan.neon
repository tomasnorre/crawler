includes:
    - phpstan-baseline.neon
    # For cognitive rules - These a include from the phpstan/extension-installer
    #- .Build/vendor/symplify/phpstan-rules/config/packages/cognitive-complexity/cognitive-complexity-services.neon
    #- .Build/vendor/symplify/phpstan-rules/config/services/services.neon

parameters:
    level: 8
    paths:
        - "Classes/"
        - "Configuration/"
    excludePaths:
        - Tests/Acceptance
        - Classes/Worker/CrawlerWorker.php
        - Classes/CrawlStrategy/GuzzleExecutionStrategy.php

    inferPrivatePropertyTypeFromConstructor: true
    checkMissingIterableValueType: false
    checkGenericClassInNonGenericObjectType: false

    cognitive_complexity:
        class: 60
        function: 60

services:
    -
        class: Symplify\PHPStanRules\Rules\ForbiddenFuncCallRule
        tags: [phpstan.rules.rule]
        arguments:
            forbiddenFunctions:
                - eval
                - dump
                - die
                - d
                - compact
                - var_dump

   # -
   #     class: Symplify\PHPStanRules\Rules\Explicit\PropertyTypeDeclarationSeaLevelRule
   #     tags: [phpstan.rules.rule]
   #     arguments:
   #         minimalLevel: 0.89
   #
   # -
   #     class: Symplify\PHPStanRules\Rules\Explicit\ParamTypeDeclarationSeaLevelRule
   #     tags: [phpstan.rules.rule]
   #     arguments:
   #         minimalLevel: 0.79
   #
   # -
   #     class: Symplify\PHPStanRules\Rules\Explicit\ReturnTypeDeclarationSeaLevelRule
   #     tags: [phpstan.rules.rule]
   #     arguments:
   #         minimalLevel: 0.79
   #
   # -
   #     class: Symplify\PHPStanRules\Collector\FunctionLike\ParamTypeSeaLevelCollector
   #     tags: [phpstan.collector]
   # -
   #     class: Symplify\PHPStanRules\Collector\FunctionLike\ReturnTypeSeaLevelCollector
   #     tags: [phpstan.collector]
   # -
   #     class: Symplify\PHPStanRules\Collector\ClassLike\PropertyTypeSeaLevelCollector
   #     tags: [phpstan.collector]
